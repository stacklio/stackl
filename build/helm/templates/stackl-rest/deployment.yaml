apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ template "stackl.rest" . }}"
  labels:
    {{ include "stackl.labels" . | nindent 4 }}
    component: rest
spec:
  replicas: {{ .Values.stacklrest.replicas }}
  selector:
    matchLabels:
      {{- include "stackl.selectorLabels" . | nindent 6 }}
      component: rest
  template:
    metadata:
      labels:
        {{- include "stackl.selectorLabels" . | nindent 8 }}
        component: rest
    spec:
    {{- with .Values.imagePullSecrets }}
    imagePullSecrets:
      {{- toYaml . | nindent 8 }}
    {{- end }}
      containers:
        - name: stackl-rest
          image: "{{ .Values.stacklrest.image }}"
          resources:
            requests:
              memory: 256Mi
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          env:
            - name: STACKL_DATASTORE_PATH
              value: /lfs_test_store
            - name: "STACKL_STORE"
              value: "{{ .Values.datastore.type }}"
            - name: "STACKL_DATASTORE_PATH"
              value: "{{ .Values.datastore.path }}"
            - name: "STACKL_TASK_BROKER"
              value: "{{ .Values.task_broker.type }}"
            - name: "STACKL_AGENT_BROKER"
              value: "{{ .Values.agent_broker.type }}"
            - name: "STACKL_MESSAGE_CHANNEL"
              value: "{{ .Values.message_channel.type }}"
            - name: "LOGLEVEL"
              value: "DEBUG"
            - name: "STACKL_REDIS_HOST"
              value: "{{ template "stackl.redis" . }}"
            - name: "STACKL_AGENT_HOST"
              value: "{{ template "stackl.agent" . }}"
            - name: "PYTHONUNBUFFERED"
              value: "TRUE"
          livenessProbe:
            httpGet:
              path: /docs
              port: http
          readinessProbe:
            httpGet:
              path: /docs
              port: http
