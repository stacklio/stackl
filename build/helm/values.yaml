image:
  pullPolicy: Always

mode: prod # dev

storage:
  pvc:
    size: 1Gi
    # storageClassName:
  # nfs:
  #   server:
  #   path:
  #   subPath:

datastore:
  type: Redis
#  type: LFS
#  path: /lfs_store

taskBroker:
  type: Custom

messageChannel:
  type: Redis

agentBroker:
  type: grpc

stacklRest:
  image: stacklio/stackl-rest:0.1.3dev
  name: stackl-rest
  serviceType: NodePort
  ingress:
    enabled: true
    hostname: stackl.example.com
    annotations:
      # kubernetes.io/ingress.class: traefik
      # traefik.ingress.kubernetes.io/frontend-entry-points: https
    tls:
      # - hosts:
      #   - stackl.example.com
      #   secretName: stackl
  ingressRoute:
    enabled: false
    host: stackl.example.com
    annotations: {}
    tls:
      # secretName: stackl
  replicaCount: 1

stacklWorker:
  image: stacklio/stackl-worker:0.1.3dev
  name: stackl-worker
  replicaCount: 1

stacklRedis:
  image: redis:5.0.5
  name: stackl-redis
  replicaCount: 1

stacklOpa:
  image: openpolicyagent/opa:0.20.5
  name: stackl-opa
  ingress:
    enabled: true
    hostname: opa.example.com
    annotations:
      # kubernetes.io/ingress.class: traefik
      # traefik.ingress.kubernetes.io/frontend-entry-points: https
    tls:
      # - hosts:
      #   - opa.example.com
  ingressRoute:
    enabled: false
    host: opa.example.com
    annotations: {}
    tls:
      # secretName: opa
  replicaCount: 1

stacklJobBroker:
  image: stacklio/stackl-job-broker:0.1.3dev
  name: stackl-job-broker
  serviceType: NodePort
  replicaCount: 1


# example imagePullSecrets: [name: pull-secret-name]
imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

log_level: debug

nodeSelector: {}

tolerations: []

affinity: {}
