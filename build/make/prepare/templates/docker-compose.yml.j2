version: '3'
networks:
  stackl_bridge:
    external:
      name: stackl_bridge
services:
  stackl-rest:
    restart: always
    image: stacklio/stackl-rest:dev
    container_name: stackl_app
    networks:
      - stackl_bridge
{% if datastore_type == 'LFS' %}
    volumes:
      - {{ datastore_lfs_volume }}:/lfs_test_store/
{% endif %}
    ports:
      - {{http_port}}:80
      - 8888:8888
    environment:
      - STACKL_STORE={{ datastore_type }}
      - STACKL_TASK_BROKER={{ task_broker_type }}
      - STACKL_AGENT_BROKER={{ agent_broker_type }}
      - STACKL_DATABASE_PATH=/lfs_test_store
      - STACKL_AGENT_HOST={{ agent_host }}
      - STACKL_OPA_HOST=stackl-opa-server:8181
      - GRPC_VERBOSITY="DEBUG"
      - STACKL_MESSAGE_CHANNEL={{ message_channel_type }}
      - STACKL_STACKLRESTHOST=stackl-rest
      - STACKL_STACKLRESTPORT=80
      - STACKL_REDISSENTINELHOST=stackl-redis
      - TCP_PORTS=80
      - SERVICE_PORTS=80
      - STACKL_REDIS_HOST=stackl-redis
      - LOGLEVEL=DEBUG
      - LOG_LEVEL=debug
  stackl-worker:
    restart: always
    image: stacklio/stackl-worker:dev
    networks:
      - stackl_bridge
    stdin_open: true
    tty: true
{% if datastore_type == 'LFS' %}
    volumes:
      - {{ datastore_lfs_volume }}:/lfs_test_store/
{% endif %}
    depends_on:
      - stackl-rest
      - stackl-redis
    ports:
      - 9999:9999
    environment:
      - STACKL_STORE={{ datastore_type }}
      - STACKL_DATABASE_PATH=/lfs_test_store
      - STACKL_TASK_BROKER={{ task_broker_type }}
      - STACKL_AGENT_BROKER={{ agent_broker_type }}
      - STACKL_AGENT_HOST={{ agent_host }}
      - STACKL_OPA_HOST=stackl-opa-server:8181
      - GRPC_VERBOSITY="DEBUG"
      - STACKL_LOGPATH=/var/log/stackl.log
      - STACKL_MESSAGE_CHANNEL={{ message_channel_type }}
      - STACKL_STACKLRESTHOST=stackl-rest
      - STACKL_STACKLRESTPORT=80
      - STACKL_REDISSENTINELHOST=stackl-redis
      - STACKL_ROLE=worker
      - STACKL_REDIS_HOST=stackl-redis
      - TCP_PORTS=8888
      - LOGLEVEL=DEBUG
  stackl-redis:
    restart: always
    image: redis:5.0.5
    networks:
      - stackl_bridge
  stackl-agent:
    restart: always
{% if agent_broker_type == 'Local' %}
    image: stacklio/stackl-docker-agent:dev
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp:/tmp
{% else %}
    image: stacklio/stackl-kubernetes-agent:dev
{% endif %}
    networks:
      - stackl_bridge
    ports:
      - 8889:8889
      - 50051:50051
    environment:
      - STACKL_HOST=stackl-rest:80
      - HOST_MACHINE=stackl-agent
      - TAGS=['common']
      - TENANT={{ tenant_name }}

  stackl-opa-server:
    restart: always
    image: openpolicyagent/opa:latest
    ports:
      - 8181:8181
    # WARNING: OPA is NOT running with an authorization policy configured. This
    # means that clients can read and write policies in OPA. If you are
    # deploying OPA in an insecure environment, be sure to configure
    # authentication and authorization on the daemon. See the Security page for
    # details: https://www.openpolicyagent.org/docs/security.html.
    volumes:
      - {{opa_files_location}}:/opa_files
    command:
      - "run"
      - "--server"
      - "--log-format=json-pretty"
      - "--log-level=debug"
      - "--set=decision_logs.console=true"
      {# - "--bundle /opa_files/functions" #}
    networks:
     - stackl_bridge