
on:
  push:
    paths:
    - "**/*"


jobs:
  stackl-cli:
    name: "Python ${{ matrix.python-version }}-stackl-cli"
    runs-on: [ubuntu-18.04]
    env:
      USING_COVERAGE: '3.6,3.8'

    strategy:
      matrix:
        python-version: ["3.6", "3.7", "3.8", "pypy3"]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
      - run: pip install pylint==2.4.4 && python stackl/stackl_cli/setup.py install
      - run: listf=$(find stackl/stackl_cli -name "*.py") && pylint $listf

  stackl-rest:
    name: "Python ${{ matrix.python-version }}-stackl-rest"
    runs-on: [ubuntu-18.04]
    env:
      USING_COVERAGE: '3.6,3.8'

    strategy:
      matrix:
        python-version: ["3.6", "3.7", "3.8", "pypy3"]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
      - run: pip install pylint==2.4.4 && pip install -r requirements_rest.txt
      - run: listf=$(find stackl -name "*.py" | grep -v application/protos) && pylint $listf

  stackl-worker:
    name: "Python ${{ matrix.python-version }}-stackl-worker"
    runs-on: [ubuntu-18.04]
    env:
      USING_COVERAGE: '3.6,3.8'

    strategy:
      matrix:
        python-version: ["3.6", "3.7", "3.8", "pypy3"]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
      - run: pip install pylint==2.4.4 && pip install -r requirements_worker
      - run: listf=$(find stackl -name "*.py" | grep -v application/protos) && pylint $listf

  stackl-docker-agent:
    name: "Python ${{ matrix.python-version }}-stackl-docker-agent"
    runs-on: [ubuntu-18.04]
    env:
      USING_COVERAGE: '3.6,3.8'

    strategy:
      matrix:
        python-version: ["3.6", "3.7", "3.8", "pypy3"]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
      - run: pip install pylint==2.4.4 && pip install -r stackl/agents/grpc_base/requirements.txt
      - run: listf=$(find stackl/agent/docker_agent -name "*.py") && pylint $listf

  stackl-kubernetes-agent:
    name: "Python ${{ matrix.python-version }}-stackl-kubernetes-agent"
    runs-on: [ubuntu-18.04]
    env:
      USING_COVERAGE: '3.6,3.8'

    strategy:
      matrix:
        python-version: ["3.6", "3.7", "3.8", "pypy3"]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
      - run: pip install pylint==2.4.4 && pip install -r stackl/agents/grpc_base/requirements.txt
      - run: listf=$(find stackl/agent/kubernetes_agent -name "*.py") && pylint $listf

  stackl-websocket-agent:
    name: "Python ${{ matrix.python-version }}-stackl-websocket-agent"
    runs-on: [ubuntu-18.04]
    env:
      USING_COVERAGE: '3.6,3.8'

    strategy:
      matrix:
        python-version: ["3.6", "3.7", "3.8", "pypy3"]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
          architecture: x64
      - run: pip install pylint==2.4.4 && pip install -r stackl/agents/grpc_base/requirements.txt
      - run: listf=$(find stackl/agent/websocket_agent -name "*.py") && pylint $listf
